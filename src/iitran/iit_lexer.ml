# 1 "src/iitran/iit_lexer.mll"
 

  open Iit_tokens
  exception Quit
  exception NeedMore
  exception SyntaxError

(* Taken from https://v2.ocaml.org/releases/4.14/htmlman/lexyacc.html#s%3Alexyacc-common-errors
and https://stackoverflow.com/questions/35068495/ocamllex-case-insenstitive*)
let keywords = Hashtbl.create 10
let _ = List.iter (fun (kwd, tok) -> Hashtbl.add keywords kwd tok)
    [ "integer", TINT;
      "character", TCHARACTER;
      "logical", TLOGICAL;
      "and", AND;
      "or", OR;
      "not", NOT;
      "char", CCHAR;
      "int", CINT;
      "lg", CLG;
      "if", IF;
      "else", ELSE;
      "do", DO;
      "end", END;
      "while", WHILE;
      "stop", STOP
      ]

# 31 "src/iitran/iit_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\253\255\001\000\255\255\254\255\005\000\233\255\234\255\
    \235\255\236\255\237\255\002\000\242\255\243\255\244\255\246\255\
    \247\255\083\000\084\000\003\000\159\000\169\000\252\255\002\000\
    \254\255\255\255\253\255\000\000\250\255\241\255\248\255\239\255\
    ";
  Lexing.lex_backtrk =
   "\255\255\255\255\002\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\017\000\255\255\255\255\255\255\255\255\
    \255\255\015\000\006\000\255\255\004\000\010\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_default =
   "\001\000\000\000\255\255\000\000\000\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\255\255\255\255\027\000\255\255\255\255\000\000\255\255\
    \000\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\003\000\004\000\026\000\002\000\025\000\024\000\
    \000\000\000\000\023\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\025\000\000\000\028\000\
    \010\000\022\000\255\255\000\000\019\000\008\000\007\000\013\000\
    \015\000\016\000\021\000\000\000\012\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\031\000\
    \000\000\017\000\009\000\011\000\000\000\000\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \030\000\000\000\000\000\014\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\000\000\000\000\
    \029\000\000\000\000\000\000\000\000\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\000\000\
    \000\000\000\000\000\000\018\000\000\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\255\255\000\000\006\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\002\000\023\000\000\000\005\000\005\000\
    \255\255\255\255\005\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\005\000\255\255\027\000\
    \005\000\005\000\019\000\255\255\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\255\255\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\011\000\
    \255\255\005\000\005\000\005\000\255\255\255\255\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \017\000\255\255\255\255\005\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\255\255\255\255\
    \017\000\255\255\255\255\255\255\255\255\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\255\255\
    \255\255\255\255\255\255\018\000\255\255\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\019\000\255\255\005\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec comment lexbuf =
   __ocaml_lex_comment_rec lexbuf 0
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 36 "src/iitran/iit_lexer.mll"
              ( Lexing.new_line lexbuf; token lexbuf )
# 182 "src/iitran/iit_lexer.ml"

  | 1 ->
# 37 "src/iitran/iit_lexer.mll"
                ( Lexing.new_line lexbuf; token lexbuf )
# 187 "src/iitran/iit_lexer.ml"

  | 2 ->
# 38 "src/iitran/iit_lexer.mll"
           ( comment lexbuf)
# 192 "src/iitran/iit_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

and token lexbuf =
   __ocaml_lex_token_rec lexbuf 5
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 40 "src/iitran/iit_lexer.mll"
            ( token lexbuf )
# 204 "src/iitran/iit_lexer.ml"

  | 1 ->
# 41 "src/iitran/iit_lexer.mll"
              ( Lexing.new_line lexbuf; token lexbuf )
# 209 "src/iitran/iit_lexer.ml"

  | 2 ->
# 42 "src/iitran/iit_lexer.mll"
                ( Lexing.new_line lexbuf; token lexbuf )
# 214 "src/iitran/iit_lexer.ml"

  | 3 ->
# 43 "src/iitran/iit_lexer.mll"
             ( comment lexbuf )
# 219 "src/iitran/iit_lexer.ml"

  | 4 ->
let
# 44 "src/iitran/iit_lexer.mll"
                        n
# 225 "src/iitran/iit_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 44 "src/iitran/iit_lexer.mll"
                          ( INT (int_of_string n) )
# 229 "src/iitran/iit_lexer.ml"

  | 5 ->
let
# 45 "src/iitran/iit_lexer.mll"
                             c
# 235 "src/iitran/iit_lexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 1) in
# 45 "src/iitran/iit_lexer.mll"
                                     ( CHAR c )
# 239 "src/iitran/iit_lexer.ml"

  | 6 ->
let
# 47 "src/iitran/iit_lexer.mll"
                  s
# 245 "src/iitran/iit_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 47 "src/iitran/iit_lexer.mll"
                    ( try Hashtbl.find keywords (String.lowercase_ascii s)
                      with Not_found -> IDENT (String.lowercase_ascii s) )
# 250 "src/iitran/iit_lexer.ml"

  | 7 ->
# 49 "src/iitran/iit_lexer.mll"
              ( ASSIGN)
# 255 "src/iitran/iit_lexer.ml"

  | 8 ->
# 50 "src/iitran/iit_lexer.mll"
             ( COMMA )
# 260 "src/iitran/iit_lexer.ml"

  | 9 ->
# 51 "src/iitran/iit_lexer.mll"
             ( PLUS )
# 265 "src/iitran/iit_lexer.ml"

  | 10 ->
# 52 "src/iitran/iit_lexer.mll"
             ( MINUS )
# 270 "src/iitran/iit_lexer.ml"

  | 11 ->
# 53 "src/iitran/iit_lexer.mll"
             ( NEG )
# 275 "src/iitran/iit_lexer.ml"

  | 12 ->
# 54 "src/iitran/iit_lexer.mll"
             ( TIMES )
# 280 "src/iitran/iit_lexer.ml"

  | 13 ->
# 55 "src/iitran/iit_lexer.mll"
             ( DIV )
# 285 "src/iitran/iit_lexer.ml"

  | 14 ->
# 56 "src/iitran/iit_lexer.mll"
              ( LE )
# 290 "src/iitran/iit_lexer.ml"

  | 15 ->
# 57 "src/iitran/iit_lexer.mll"
             ( LT )
# 295 "src/iitran/iit_lexer.ml"

  | 16 ->
# 58 "src/iitran/iit_lexer.mll"
              ( GE )
# 300 "src/iitran/iit_lexer.ml"

  | 17 ->
# 59 "src/iitran/iit_lexer.mll"
             ( GT )
# 305 "src/iitran/iit_lexer.ml"

  | 18 ->
# 60 "src/iitran/iit_lexer.mll"
             ( NE )
# 310 "src/iitran/iit_lexer.ml"

  | 19 ->
# 62 "src/iitran/iit_lexer.mll"
             ( EQUAL )
# 315 "src/iitran/iit_lexer.ml"

  | 20 ->
# 64 "src/iitran/iit_lexer.mll"
             ( LPAREN )
# 320 "src/iitran/iit_lexer.ml"

  | 21 ->
# 65 "src/iitran/iit_lexer.mll"
             ( RPAREN )
# 325 "src/iitran/iit_lexer.ml"

  | 22 ->
# 66 "src/iitran/iit_lexer.mll"
             ( EOF )
# 330 "src/iitran/iit_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

